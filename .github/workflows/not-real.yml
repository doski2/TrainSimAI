name: CI - not-real tests

on:
  push:
    branches:
      - main
      - 'ci/**'
  pull_request: {}

jobs:
  precommit-check:
    runs-on: windows-latest
    env:
      PYTHONIOENCODING: 'utf-8'
      # Force fake RD on hosted runners to avoid attempting to load native DLLs
      TSC_FAKE_RD: '1'
    steps:
      - uses: actions/checkout@v4
      - name: Disable CRLF conversion
        shell: pwsh
        run: |
          git config --global core.autocrlf false
          git config --global core.eol lf
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          python -m pip install pre-commit
      - name: Pre-commit diagnostics
        shell: pwsh
        run: |
          Write-Host "--- pre-commit config ---"
          Get-Content .pre-commit-config.yaml
          Write-Host "--- installed hook revisions (pre-commit will use remote revs) ---"
          Get-Content .pre-commit-config.yaml | Select-String -Pattern "rev:"
          Write-Host "--- black/isort versions (local environment) ---"
          python -c "import black, isort, pkgutil; print('black', getattr(black, '__version__', 'unknown')); print('isort', getattr(isort, '__version__', 'unknown'))" || true
      - name: Run pre-commit checks
        shell: pwsh
        run: pre-commit run --all-files --show-diff-on-failure

  test-not-real:
    needs: precommit-check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install dev dependencies
        run: python -m pip install ruff==0.12.1
      - name: Run tests (not-real)
        shell: pwsh
        run: |
          python -m pip install pytest
          python -m pytest -q -m "not real" --junitxml=pytest-results.xml | Tee-Object -FilePath pytest.log
      - name: Upload pytest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-not-real-report
          path: |
            pytest-results.xml
            pytest.log

  unit-tests:
    needs: precommit-check
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Install pytest
        run: python -m pip install pytest
      - name: Run unit tests (no -m filter)
        shell: pwsh
        run: |
          # Run unit tests (override pytest.ini addopts to ensure unmarked tests run)
          # Generate junit xml and capture console output to pytest.log so the
          # Upload artifact step can find and store test results.
          python -m pytest -q -o addopts= --junitxml=pytest-results.xml | Tee-Object -FilePath pytest.log
      - name: Upload pytest results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-unit-report
          path: |
            pytest-results.xml
            pytest.log
